# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /apps/openshift/ca.crt
    bearer_token_file: /apps/openshift/newbearer.token
    kubernetes_sd_configs:
      - api_server: 'https://api.lab.okd.local:6443'
        role: node
        namespaces:
          names:
            - wordpress
        tls_config:
          ca_file: /apps/openshift/ca.crt
        bearer_token_file: /apps/openshift/newbearer.token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: "api.lab.okd.local:6443"
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
  - job_name: 'spring-boot-metrics'
    scheme: https
    tls_config:
      ca_file: /apps/openshift/ca.crt
    bearer_token_file: /apps/openshift/newbearer.token
    kubernetes_sd_configs:
      - api_server: 'https://api.lab.okd.local:6443'
        role: endpoints
        namespaces:
          names:
            - springboot
        tls_config:
          ca_file: /apps/openshift/ca.crt
        bearer_token_file: /apps/openshift/newbearer.token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        action: keep
        regex: springboot
      - target_label: __address__
        replacement: "api.lab.okd.local:6443"
      - target_label: __metrics_path__
        replacement: "/actuator/prometheus"
      - source_labels:
        - __meta_kubernetes_namespace
        - __scheme__
        - __meta_kubernetes_pod_name
        - __meta_kubernetes_pod_container_port_number
        - __metrics_path__
        regex: (.+);(.+);(.+);(.+);(.+)
        action: replace
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/http:${3}:${4}/proxy${5}
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_pod_container_(.+)
  - job_name: 'kube-state-metrics'
    scheme: https
    tls_config:
      ca_file: /apps/openshift/ca.crt
    bearer_token_file: /apps/openshift/newbearer.token
    kubernetes_sd_configs:
      - api_server: 'https://api.lab.okd.local:6443'
        role: endpoints
        namespaces:
          names:
            - monitoring
        tls_config:
          ca_file: /apps/openshift/ca.crt
        bearer_token_file: /apps/openshift/newbearer.token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        action: keep
        regex: monitoring
      - target_label: __address__
        replacement: "api.lab.okd.local:6443"
      - source_labels:
        - __meta_kubernetes_namespace
        - __scheme__
        - __meta_kubernetes_pod_name
        - __meta_kubernetes_pod_container_port_number
        regex: (.+);(.+);(.+);(.+)
        action: replace
        target_label: __metrics_path__
        replacement: /api/v1/namespaces/${1}/pods/http:${3}:${4}/proxy${5}/metrics
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_pod_container_(.+)